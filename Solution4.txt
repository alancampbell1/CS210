Lab 4 Solutions

Spacing between primes 

Problem Statement

The goal is to read in a number N and output the distance between the prime number that preceeds it, and the prime that follows it. If the number itself happens to be prime, then output the distance to the subsequent prime. For example, if N is 7, then output 4, because the next prime is 11, which is 4 away.

 

Input Format

An integer N.

 

Output Format

The distance between the preceeding and subsequent prime number at N.

 

Constraints

2≤N≤1000

 

Sample Input

10

 

Sample Output

4



Solution



public class Solution

{

    public static void main(String args[] ) throws Exception 

    {

        Scanner myscanner = new Scanner(System.in);

        

        int n = myscanner.nextInt();

        int[] primeArray = new int[n];  

        int primeCount = 1;

        primeArray[0] = 2;

        

        for (int i=2; i<(n*2); i++)

        {

            boolean primeTest = true;

            

            for (int j=0; j<primeCount && primeTest; j++)

            {

                if (i%primeArray[j]==0)

                {

                    primeTest = false;

                    j = primeCount;

                }

            }

            

            if (primeTest)

            {

                primeArray[primeCount] = i;

                primeCount++;

            }           

        }

        

        int higher = 0;

        int lower = 0;

        

        for (int i=0; i<primeCount; i++)

        {

            if (primeArray[i]>n)

            {

                higher = primeArray[i];

                lower = primeArray[i-1];

                i = primeCount;

            }

        }    

        

        int diff = higher - lower;

        

        System.out.println(diff);

    }

}









Number of primes under a limit 

    

Problem Statement

The goal is to read in a number N and output the number of primes below that number. For example, if N is 11, then output 4, because there are 4 primes below 11, namely, 2, 3, 5, and 7.

 

Input Format

An integer N.

 

Output Format

The number of primes below N.

 

Constraints

2≤N≤1000

 

Sample Input

20

 

Sample Output

8

 

Explanation

There are 8 primes smaller than 20.

They are 2, 3, 5, 7, 11, 13, 17, and 19.





Solution



public class Solution {

	public static void main(String args[] ) throws Exception {

    		Scanner in = new Scanner(System.in);

    		int c = 0;



        		for(int i = in.nextInt()-1; i >= 2; i--) {

           			if(isPrime(i)) c++;

       			}



    			System.out.print(c);

    	}

    

    	public static boolean isPrime(int x) {

        	for(int i = 2; i <= Math.sqrt(x); i++) {

         	   if(x%i == 0) return false;

        	}

       	 	return true;

    	} 

    

}